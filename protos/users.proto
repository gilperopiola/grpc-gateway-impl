syntax = "proto3";

/* Users protofile */

package users;
option go_package = "./users";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "buf/validate/validate.proto";

/* OpenAPI Spec */

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "gRPC-HTTP Gateway Implementation :)";
    version: "1.0";
    contact: {
      email: "ferra.main@gmail.com";
    };
  };
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "403";
  }
  responses: {
    key: "404";
  }
  responses: {
    key: "500";
  }
};

/* API Objects */

enum Success {
  FALSE = 0;
  TRUE = 1;
}

message ResponseMessage {
  Success success = 1;
  string data = 3;
  string error = 5;
}

service UsersService {
  rpc Signup (SignupRequest) returns (SignupResponse) {
    option (google.api.http) = {
      post: "/v1/signup"
    };
  }
  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/login"
    };
  }
}

message SignupRequest {
  string username = 1 [(buf.validate.field).string.min_len = 4, (buf.validate.field).string.max_len = 20];
  string password = 3 [(buf.validate.field).string.pattern = "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$"];
}

message SignupResponse {
  ResponseMessage message = 1;
}

message LoginRequest {
  string username = 1 [(buf.validate.field).string.min_len = 4, (buf.validate.field).string.max_len = 20];
  string password = 3;
}

message LoginResponse {
  ResponseMessage message = 1;
}
