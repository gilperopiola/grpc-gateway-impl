{
  "swagger": "2.0",
  "info": {
    "title": "grpc-gateway-impl",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "GroupsService"
    }
  ],
  "host": "localhost:8083",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/groups": {
      "post": {
        "summary": "Creates a new group.\nReturns the created group's unique ID.",
        "operationId": "create_group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".groups.CreateGroupResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "error": "validation error: name value length must be at least 4 characters."
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "example": {
                "error": "unauthorized."
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "error": "forbidden error."
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "error": "not found: group not found."
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "example": {
                "error": "internal server error, something went wrong on our end."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbsCreateGroupRequest"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/v1/groups/{groupId}": {
      "get": {
        "operationId": "get_group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".groups.GetGroupResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "error": "validation error: name value length must be at least 4 characters."
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "example": {
                "error": "unauthorized."
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "error": "forbidden error."
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "error": "not found: group not found."
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "example": {
                "error": "internal server error, something went wrong on our end."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "post": {
        "operationId": "invite_to_group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".groups.InviteToGroupResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "error": "validation error: name value length must be at least 4 characters."
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "example": {
                "error": "unauthorized."
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "error": "forbidden error."
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "error": "not found: group not found."
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "example": {
                "error": "internal server error, something went wrong on our end."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsServiceInviteToGroupBody"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/v1/groups/{groupId}/answer": {
      "post": {
        "operationId": "answer_group_invite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": ".groups.AnswerGroupInviteResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "error": "validation error: name value length must be at least 4 characters."
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "example": {
                "error": "unauthorized."
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "error": "forbidden error."
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "error": "not found: group not found."
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "example": {
                "error": "internal server error, something went wrong on our end."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupsServiceAnswerGroupInviteBody"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    }
  },
  "definitions": {
    "GroupsServiceAnswerGroupInviteBody": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "accept": {
          "type": "boolean"
        }
      },
      "title": "AnswerGroupInviteRequest"
    },
    "GroupsServiceInviteToGroupBody": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "integer",
          "format": "int32"
        },
        "invitedUserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "maxLength": 255,
            "pattern": "^[0-9]+$"
          }
        }
      },
      "title": "InviteToGroupRequest"
    },
    "pbsAnswerGroupInviteResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/pbsGroupInfo",
          "readOnly": true
        }
      }
    },
    "pbsCreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the group to create."
        },
        "invitedUserIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "maxLength": 255,
            "pattern": "^[0-9]+$"
          }
        }
      },
      "title": "CreateGroupRequest",
      "required": [
        "name"
      ]
    },
    "pbsCreateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/pbsGroupInfo",
          "readOnly": true
        }
      }
    },
    "pbsGetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/pbsGroupInfo",
          "readOnly": true
        }
      }
    },
    "pbsGroupInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "owner": {
          "$ref": "#/definitions/pbsUserInfo",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "pbsInviteToGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/pbsGroupInfo",
          "readOnly": true
        }
      }
    },
    "pbsUserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
