// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: gpt.proto

package pbs

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GPTImageSize int32

const (
	GPTImageSize_DEFAULT GPTImageSize = 0
	GPTImageSize_WIDE    GPTImageSize = 1
	GPTImageSize_TALL    GPTImageSize = 2
	GPTImageSize_TINY    GPTImageSize = 3
	GPTImageSize_SMALL   GPTImageSize = 4
)

// Enum value maps for GPTImageSize.
var (
	GPTImageSize_name = map[int32]string{
		0: "DEFAULT",
		1: "WIDE",
		2: "TALL",
		3: "TINY",
		4: "SMALL",
	}
	GPTImageSize_value = map[string]int32{
		"DEFAULT": 0,
		"WIDE":    1,
		"TALL":    2,
		"TINY":    3,
		"SMALL":   4,
	}
)

func (x GPTImageSize) Enum() *GPTImageSize {
	p := new(GPTImageSize)
	*p = x
	return p
}

func (x GPTImageSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPTImageSize) Descriptor() protoreflect.EnumDescriptor {
	return file_gpt_proto_enumTypes[0].Descriptor()
}

func (GPTImageSize) Type() protoreflect.EnumType {
	return &file_gpt_proto_enumTypes[0]
}

func (x GPTImageSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPTImageSize.Descriptor instead.
func (GPTImageSize) EnumDescriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{0}
}

type NewGPTChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NewGPTChatRequest) Reset() {
	*x = NewGPTChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGPTChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGPTChatRequest) ProtoMessage() {}

func (x *NewGPTChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGPTChatRequest.ProtoReflect.Descriptor instead.
func (*NewGPTChatRequest) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{0}
}

func (x *NewGPTChatRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type NewGPTChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat       *GPTChatInfo `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	GptMessage string       `protobuf:"bytes,2,opt,name=gpt_message,json=gptMessage,proto3" json:"gpt_message,omitempty"`
}

func (x *NewGPTChatResponse) Reset() {
	*x = NewGPTChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGPTChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGPTChatResponse) ProtoMessage() {}

func (x *NewGPTChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGPTChatResponse.ProtoReflect.Descriptor instead.
func (*NewGPTChatResponse) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{1}
}

func (x *NewGPTChatResponse) GetChat() *GPTChatInfo {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *NewGPTChatResponse) GetGptMessage() string {
	if x != nil {
		return x.GptMessage
	}
	return ""
}

type ReplyToGPTChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId  int32  `protobuf:"varint,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReplyToGPTChatRequest) Reset() {
	*x = ReplyToGPTChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyToGPTChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyToGPTChatRequest) ProtoMessage() {}

func (x *ReplyToGPTChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyToGPTChatRequest.ProtoReflect.Descriptor instead.
func (*ReplyToGPTChatRequest) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{2}
}

func (x *ReplyToGPTChatRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *ReplyToGPTChatRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReplyToGPTChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat       *GPTChatInfo `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	GptMessage string       `protobuf:"bytes,2,opt,name=gpt_message,json=gptMessage,proto3" json:"gpt_message,omitempty"`
}

func (x *ReplyToGPTChatResponse) Reset() {
	*x = ReplyToGPTChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyToGPTChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyToGPTChatResponse) ProtoMessage() {}

func (x *ReplyToGPTChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyToGPTChatResponse.ProtoReflect.Descriptor instead.
func (*ReplyToGPTChatResponse) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyToGPTChatResponse) GetChat() *GPTChatInfo {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *ReplyToGPTChatResponse) GetGptMessage() string {
	if x != nil {
		return x.GptMessage
	}
	return ""
}

type NewGPTImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Size    GPTImageSize `protobuf:"varint,2,opt,name=size,proto3,enum=pbs.GPTImageSize" json:"size,omitempty"`
}

func (x *NewGPTImageRequest) Reset() {
	*x = NewGPTImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGPTImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGPTImageRequest) ProtoMessage() {}

func (x *NewGPTImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGPTImageRequest.ProtoReflect.Descriptor instead.
func (*NewGPTImageRequest) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{4}
}

func (x *NewGPTImageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewGPTImageRequest) GetSize() GPTImageSize {
	if x != nil {
		return x.Size
	}
	return GPTImageSize_DEFAULT
}

type NewGPTImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat     *GPTChatInfo `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	ImageUrl string       `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *NewGPTImageResponse) Reset() {
	*x = NewGPTImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gpt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGPTImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGPTImageResponse) ProtoMessage() {}

func (x *NewGPTImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gpt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGPTImageResponse.ProtoReflect.Descriptor instead.
func (*NewGPTImageResponse) Descriptor() ([]byte, []int) {
	return file_gpt_proto_rawDescGZIP(), []int{5}
}

func (x *NewGPTImageResponse) GetChat() *GPTChatInfo {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *NewGPTImageResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

var File_gpt_proto protoreflect.FileDescriptor

var file_gpt_proto_rawDesc = []byte{
	0x0a, 0x09, 0x67, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x62, 0x73,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x37, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x47,
	0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x12,
	0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x70, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x15, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x54, 0x6f, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x5f, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x47, 0x50,
	0x54, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x70, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5a, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x58, 0x0a, 0x13,
	0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x2a, 0x44, 0x0a, 0x0c, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x49, 0x44, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4e, 0x59, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x32, 0xe6, 0x03, 0x0a,
	0x0a, 0x47, 0x50, 0x54, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0a,
	0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x92, 0x41, 0x39,
	0x0a, 0x03, 0x47, 0x50, 0x54, 0x2a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x70, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x4a, 0x24, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x1d, 0x12, 0x1b, 0x0a, 0x19,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x3a,
	0x01, 0x2a, 0x22, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x70, 0x74, 0x12, 0xac, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1a,
	0x2e, 0x70, 0x62, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x50, 0x54, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x92, 0x41, 0x42, 0x0a, 0x03, 0x47, 0x50,
	0x54, 0x2a, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x70, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x4a, 0x28, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x21, 0x12, 0x1f, 0x0a,
	0x1d, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47,
	0x50, 0x54, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x70, 0x74,
	0x2f, 0x7b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x0b, 0x4e,
	0x65, 0x77, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x73,
	0x2e, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x50, 0x54,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x92,
	0x41, 0x3f, 0x0a, 0x05, 0x44, 0x41, 0x4c, 0x4c, 0x45, 0x2a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x64,
	0x61, 0x6c, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4a, 0x25, 0x0a, 0x03, 0x32, 0x30,
	0x30, 0x12, 0x1e, 0x12, 0x1c, 0x0a, 0x1a, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4e, 0x65,
	0x77, 0x47, 0x50, 0x54, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x6c, 0x6c, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x6c, 0x70, 0x65, 0x72, 0x6f, 0x70, 0x69, 0x6f, 0x6c, 0x61,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x69, 0x6d,
	0x70, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x62, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gpt_proto_rawDescOnce sync.Once
	file_gpt_proto_rawDescData = file_gpt_proto_rawDesc
)

func file_gpt_proto_rawDescGZIP() []byte {
	file_gpt_proto_rawDescOnce.Do(func() {
		file_gpt_proto_rawDescData = protoimpl.X.CompressGZIP(file_gpt_proto_rawDescData)
	})
	return file_gpt_proto_rawDescData
}

var file_gpt_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gpt_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gpt_proto_goTypes = []interface{}{
	(GPTImageSize)(0),              // 0: pbs.GPTImageSize
	(*NewGPTChatRequest)(nil),      // 1: pbs.NewGPTChatRequest
	(*NewGPTChatResponse)(nil),     // 2: pbs.NewGPTChatResponse
	(*ReplyToGPTChatRequest)(nil),  // 3: pbs.ReplyToGPTChatRequest
	(*ReplyToGPTChatResponse)(nil), // 4: pbs.ReplyToGPTChatResponse
	(*NewGPTImageRequest)(nil),     // 5: pbs.NewGPTImageRequest
	(*NewGPTImageResponse)(nil),    // 6: pbs.NewGPTImageResponse
	(*GPTChatInfo)(nil),            // 7: pbs.GPTChatInfo
}
var file_gpt_proto_depIdxs = []int32{
	7, // 0: pbs.NewGPTChatResponse.chat:type_name -> pbs.GPTChatInfo
	7, // 1: pbs.ReplyToGPTChatResponse.chat:type_name -> pbs.GPTChatInfo
	0, // 2: pbs.NewGPTImageRequest.size:type_name -> pbs.GPTImageSize
	7, // 3: pbs.NewGPTImageResponse.chat:type_name -> pbs.GPTChatInfo
	1, // 4: pbs.GPTService.NewGPTChat:input_type -> pbs.NewGPTChatRequest
	3, // 5: pbs.GPTService.ReplyToGPTChat:input_type -> pbs.ReplyToGPTChatRequest
	5, // 6: pbs.GPTService.NewGPTImage:input_type -> pbs.NewGPTImageRequest
	2, // 7: pbs.GPTService.NewGPTChat:output_type -> pbs.NewGPTChatResponse
	4, // 8: pbs.GPTService.ReplyToGPTChat:output_type -> pbs.ReplyToGPTChatResponse
	6, // 9: pbs.GPTService.NewGPTImage:output_type -> pbs.NewGPTImageResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_gpt_proto_init() }
func file_gpt_proto_init() {
	if File_gpt_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gpt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGPTChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGPTChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyToGPTChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyToGPTChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGPTImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gpt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGPTImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gpt_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gpt_proto_goTypes,
		DependencyIndexes: file_gpt_proto_depIdxs,
		EnumInfos:         file_gpt_proto_enumTypes,
		MessageInfos:      file_gpt_proto_msgTypes,
	}.Build()
	File_gpt_proto = out.File
	file_gpt_proto_rawDesc = nil
	file_gpt_proto_goTypes = nil
	file_gpt_proto_depIdxs = nil
}
